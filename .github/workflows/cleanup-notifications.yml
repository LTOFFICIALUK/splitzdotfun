name: Cleanup Old Notifications

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  cleanup-notifications:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cleanup old notifications
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          
          const supabase = createClient(
            process.env.NEXT_PUBLIC_SUPABASE_URL,
            process.env.SUPABASE_SERVICE_ROLE_KEY
          );
          
          async function cleanupNotifications() {
            try {
              console.log('🔄 Starting notification cleanup...');
              
              // Delete notifications older than 90 days
              const { data, error, count } = await supabase
                .from('notifications')
                .delete()
                .lt('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString())
                .select('id');
              
              if (error) {
                console.error('❌ Error cleaning up notifications:', error);
                process.exit(1);
              }
              
              const deletedCount = data?.length || 0;
              console.log(`✅ Successfully cleaned up ${deletedCount} old notifications`);
              
              // Get notification stats
              const { data: stats, error: statsError } = await supabase
                .from('notification_stats')
                .select('*');
              
              if (!statsError && stats) {
                const totalNotifications = stats.reduce((sum, stat) => sum + stat.total_notifications, 0);
                const totalUnread = stats.reduce((sum, stat) => sum + stat.unread_count, 0);
                console.log(`📊 Current stats: ${totalNotifications} total notifications, ${totalUnread} unread`);
              }
              
            } catch (error) {
              console.error('❌ Unexpected error:', error);
              process.exit(1);
            }
          }
          
          cleanupNotifications();
          "

      - name: Report cleanup results
        run: |
          echo "✅ Notification cleanup completed successfully"
          echo "📅 Cleanup ran at: $(date)"
          echo "🔄 Next cleanup scheduled for tomorrow at 2 AM UTC"
