name: Update Token Statistics & Leaderboard

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-statistics:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Update token statistics
      run: |
        echo "🔄 Starting token statistics update at $(date)"
        
        # Call the API endpoint to update statistics
        response=$(curl -s -w "\n%{http_code}" -X POST https://splitz.fun/api/manual-update-statistics \
          -H "Content-Type: application/json" \
          -H "User-Agent: GitHub-Actions-Token-Update/1.0")
        
        # Extract response body and status code
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "📊 Response Status: $http_code"
        echo "📋 Response Body: $response_body"
        
        # Check if the request was successful
        if [ "$http_code" -eq 200 ]; then
          echo "✅ Token statistics update completed successfully"
        else
          echo "❌ Token statistics update failed with status $http_code"
          exit 1
        fi
      
    - name: Update royalty leaderboard
      run: |
        echo "🏆 Starting royalty leaderboard update at $(date)"
        
        # Call the API endpoint to update leaderboard
        response=$(curl -s -w "\n%{http_code}" -X POST https://splitz.fun/api/manual-update-leaderboard \
          -H "Content-Type: application/json" \
          -H "User-Agent: GitHub-Actions-Leaderboard-Update/1.0")
        
        # Extract response body and status code
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "📊 Response Status: $http_code"
        echo "📋 Response Body: $response_body"
        
        # Check if the request was successful
        if [ "$http_code" -eq 200 ]; then
          echo "✅ Royalty leaderboard update completed successfully"
        else
          echo "❌ Royalty leaderboard update failed with status $http_code"
          exit 1
        fi
      
    - name: Update stats cache
      run: |
        echo "📊 Starting stats cache update at $(date)"
        
        # Call the API endpoint to update stats cache
        response=$(curl -s -w "\n%{http_code}" -X POST https://splitz.fun/api/update-stats-cache \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
          -H "User-Agent: GitHub-Actions-Stats-Cache-Update/1.0")
        
        # Extract response body and status code
        http_code=$(echo "$response" | tail -n1)
        response_body=$(echo "$response" | head -n -1)
        
        echo "📊 Response Status: $http_code"
        echo "📋 Response Body: $response_body"
        
        # Check if the request was successful
        if [ "$http_code" -eq 200 ]; then
          echo "✅ Stats cache update completed successfully"
        else
          echo "❌ Stats cache update failed with status $http_code"
          exit 1
        fi
      
    - name: Log completion
      run: |
        echo "🎉 Token statistics, leaderboard, and stats cache update completed at $(date)"
        echo "📈 Check token statistics at: https://splitz.fun/api/token-statistics?limit=5"
        echo "🏆 Check leaderboard at: https://splitz.fun/api/royalty-leaderboard?period=all_time&limit=10"
        echo "📊 Check stats cache at: https://splitz.fun/api/stats-cache"
        echo "📊 Check database at: https://splitz.fun/api/setup-token-statistics"
